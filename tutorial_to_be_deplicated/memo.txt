#set scan position and noise variance
#4.0 : r = 0.47, c = 16.78, damping = 0.7, numiter = 400, noise = 0.0046 (SNR = 40 dB)
#3.0 : r = 0.47, c = 19.70, damping = 0.7, numiter = 400
#2.5 : r = 0.47, c = 21.83, damping = 0.7, numiter = 400
#2.3 : r = 0.47, c = 22.89, damping = 0.7, numiter = 400
#EM : r = 0.25, c = 8, noise = 0.00106 (SNR = 40 dB)


#sparse experiment
r = 0.5, c = 24.6 で観測率2.0

r = 0.5の場合、らせんスキャンにおいて観測率とcの関係は（max 300 scans）
c = 24.73　観測率 = 2.00 (cameramanだと顔以外はvisually acceptableだったりする。位相は壊滅的）
c = 24.01　観測率 = 2.10(cameramanだと顔以外はvisually acceptableだったりする。位相は壊滅的）
c  = 23.36　観測率 = 2.20 (cameramanの顔はそこそこacceptableだが位相はダメ)
c  = 22.80　観測率 = 2.30 (cameramanの顔はそこそこacceptable. 2.2との違いは謎)
c = 22.26　観測率 = 2.40
ところでvampの振動的なふるまいをする場合はたいてい位相が変な見た目になる
c = 21.76 　観測率 = 2.50(位相の見た目もある程度まともになってくる)
c = 21.25　観測率 = 2.60
c = 19.64　観測率 = 3.00(位相も含めて完璧)
c = 16.81   観測率 = 4
c = 25.45　観測率 = 1.9

核についてnイテレーションくらいメッセージのupdateとプローブ推定を行ったうえで、核とのオーバーラップの大きい順に粗い測定に関するメッセージをupdateすることで安定しそう。

真ん中に
scan_positions.extend([[128,128],[128,384],[384,384],[384,128]])
を寄せた場合，
c = 26.08 観測率 = 1.9
c = 25.26 観測率 = 2.0
c = 24.56 : 観測率 = 2.1
c = 23.89 :    観測率 = 2.2
c   = 23.20 : 観測率 = 2.3
c = 22.67 : 観測率 = 2.4
c = 22.13 : 観測率 = 2.5

25日
